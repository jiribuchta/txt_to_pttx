name: ðŸš€ Build Windows Executable (PyInstaller)

on:
  push:
    branches:
      - main  # Build when code is pushed to the main branch
  release:
    types: [published] # Build when a new official release is published

permissions:
  contents: write

jobs:
  build_windows_exe:
    # CRITICAL: Must use a Windows runner to create a Windows .exe
    runs-on: windows-latest 

    steps:
      - name: 1. Checkout Code
        uses: actions/checkout@v4

      - name: 2. Set up Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Use a stable Python version
          cache: 'pip'

      - name: 3. Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: 4. Execute PyInstaller Build
        run: |
          pyinstaller --onefile --noconsole --name "txt_to_pttx" main.py
          
      # --- Distribution & Artifacts ---

      - name: 5. Upload Executable as GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-app-exe
          # The .exe is always located in the 'dist' folder
          path: dist/txt_to_pttx.exe
          retention-days: 7

      - name: 6. Attach Executable to GitHub Release (If Applicable)
        # This step only runs if the workflow was triggered by a new GitHub Release event
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/txt_to_pttx.exe
          token: ${{ secrets.GH_RELEASE_TOKEN }}
          tag_name: ${{ github.ref }}
